---
name: ドキュメントのビルドとリリース

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - 'documents/**'
  release:
    types: [published]
  workflow_dispatch:

env:
  APP_OSS_MARIS_WEBAPP_NAME: app-oss-maris
  DOCUMENT_ARTIFACTS_FILENAME: docs.zip

jobs:
  build:
    name: ドキュメントのビルド
    runs-on: ubuntu-latest
    steps:
      - name: ブランチのチェックアウト
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Linter の実行
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_INCLUDE: 'documents/.*'
          LINTER_RULES_PATH: /
          MARKDOWN_CONFIG_FILE: '.markdownlint.yaml'
          VALIDATE_MARKDOWN: true
          VALIDATE_YAML: true
          YAML_CONFIG_FILE: '.yaml-lint.yml'

      - name: Python のセットアップ
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: mkdocs のインストール
        run: |
          python -m pip install --upgrade pip
          python -m pip install mkdocs
          python -m pip install mkdocs-material
          python -m pip install pymdown-extensions
          python -m pip install mkdocs-minify-plugin

      - name: ドキュメントのビルド
        run: |
          # リリースタグを打ったときだけ github.event.release.name が設定される。
          if [ -n "${{ github.event.release.name }}" ];
          then
            export VERSION="${{ github.event.release.name }}"
          else
            export VERSION="Test Version"
          fi
          cd samples/Dressca
          zip -r ../../documents/contents/samples/downloads/dressca.zip *
          cd ../../documents
          mkdocs build --verbose --clean --strict
          cp -T -v -f -r ../iis-files build-artifacts/
          cd build-artifacts
          zip -r ../${{ env.DOCUMENT_ARTIFACTS_FILENAME }} *

      - name: ビルドアーティファクトのアップロード
        uses: actions/upload-artifact@v2.2.4
        with:
          name: documents
          path: documents/${{ env.DOCUMENT_ARTIFACTS_FILENAME }}

  release:
    name: ドキュメントのリリース
    needs: build
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - name: ビルドアーティファクトのダウンロード
        uses: actions/download-artifact@v2.0.10
        with:
          name: documents

      - name: ステージング環境へのデプロイ
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.OSS_MARIS_WEBAPP_NAME }}
          slot-name: staging
          publish-profile: ${{ secrets.APP_OSS_MARIS_STAGING_PUBLISH_PROFILE  }}
          package: '${{ env.DOCUMENT_ARTIFACTS_FILENAME }}'

      - name: Teams への通知
        uses: fjogeleit/http-request-action@v1.8.1
        with:
          url: ${{ secrets.POST_MESSAGE_TO_TEAMS_URL  }}
          method: POST
          contentType: application/json
          data: '{"messageType": 0,"branchName": "${{ github.ref }}","actor": "${{ github.actor }}","sha": "${{ github.sha }}","eventName": "${{ github.event_name }}"}'
          timeout: 30000

  swap:
    name: 本番環境への反映承認
    needs: release
    if: ${{ !github.event.release.prerelease && github.event.action == 'published' }}
    runs-on: ubuntu-latest
    steps:
      - name: 本番環境への反映承認
        uses: fjogeleit/http-request-action@v1.8.1
        with:
          url: ${{ secrets.APPROVE_REQUEST_TO_TEAMS_URL  }}
          method: POST
          contentType: application/json
          data: '{"branchName": "${{ github.ref }}","actor": "${{ github.actor }}","sha": "${{ github.sha }}","eventName": "${{ github.event_name }}"}'
          preventFailureOnNoResponse: true
