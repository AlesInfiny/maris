---
# cSpell:ignore dotnetfw htmlmin inlinehilite materialx prebuild pymdownx superfences twemoji
site_name: AlesInfiny Maris OSS Edition
site_url: https://maris.alesinfiny.org/
docs_dir: contents
copyright: "Copyright &copy; 2023 BIPROGY Inc. All rights reserved."
site_author: "AlesInfiny Maris OSS Edition コミュニティ"
site_description: "AlesInfiny Maris OSS Edition のポータルサイトです。"
site_dir: build-artifacts

# yamllint disable rule:comments-indentation
nav:
  - AlesInfiny Maris OSS Edition にようこそ:
      - index.md
  - アプリケーションアーキテクチャ:
      - app-architecture/index.md
      - 概要編:
          - app-architecture/overview/index.md
          - 構築できるアプリケーション形態: app-architecture/overview/application-kind.md
          - アプリケーション構成: app-architecture/overview/application-structure.md
          - 構成管理: app-architecture/overview/configuration-management.md
          - .NETアプリケーションの処理方式:
              - app-architecture/overview/dotnet-application-processing-system/index.md
              - 例外処理方針: app-architecture/overview/dotnet-application-processing-system/exception-handling-policy.md
              - ログ出力方針: app-architecture/overview/dotnet-application-processing-system/logging-policy.md
              - イベント ID 管理方針: app-architecture/overview/dotnet-application-processing-system/event-id-management-policy.md
              - メッセージ管理方針: app-architecture/overview/dotnet-application-processing-system/message-management-policy.md
              - 入力値検証方針: app-architecture/overview/dotnet-application-processing-system/input-validation-policy.md
              - トランザクション管理方針: app-architecture/overview/dotnet-application-processing-system/transaction-management-policy.md
              - ヘルスチェックの必要性: app-architecture/overview/dotnet-application-processing-system/health-check-necessity.md
      - クライアントサイドレンダリング編:
          - app-architecture/client-side-rendering/index.md
          - CSR アーキテクチャ概要: app-architecture/client-side-rendering/csr-architecture-overview.md
          - フロントエンドアーキテクチャ: app-architecture/client-side-rendering/frontend-architecture.md
          - 全体処理方式: app-architecture/client-side-rendering/global-function.md
          - テスト方針:
              - app-architecture/client-side-rendering/test/index.md
              - バックエンドアプリケーションのテスト:
                  - app-architecture/client-side-rendering/test/backend-application/index.md
                  - 結合テスト ( ITa ): app-architecture/client-side-rendering/test/backend-application/integration-test.md
                  # - 単体テスト ( UT0 ): app-architecture/client-side-rendering/test/backend-application/unit-test.md
      # - コンソールアプリケーション編:
          # - app-architecture/console-app/index.md
      # - クックブック:
          # - cook-book/index.md
          # - 帳票印刷: cook-book/report.md
  - ガイド:
      - guidebooks/index.md
      - Git リポジトリ構築ガイド:
          - guidebooks/git/index.md
          - Git リポジトリホスティングサービスの選択: guidebooks/git/select-git-hosting-service.md
          - リポジトリ構造の検討: guidebooks/git/consider-repository-structure.md
          - フォルダー構造の検討: guidebooks/git/consider-folder-structure.md
          - Git の基本設定: guidebooks/git/git-settings.md
      - アプリケーション開発手順:
          - guidebooks/how-to-develop/index.md
          - .NET 編:
              - guidebooks/how-to-develop/dotnet/index.md
              - 事前準備: guidebooks/how-to-develop/dotnet/preparation.md
              - ソリューション構造の作成: guidebooks/how-to-develop/dotnet/create-solution-structure.md
              - プロジェクトの作成: guidebooks/how-to-develop/dotnet/create-project.md
              - プロジェクトの共通設定: guidebooks/how-to-develop/dotnet/project-settings.md
              - プロジェクト構造の作成: guidebooks/how-to-develop/dotnet/create-project-structure.md
              - ASP.NET Core Web API プロジェクトの構成: guidebooks/how-to-develop/dotnet/configure-asp-net-core-web-api-project.md
              - ASP.NET Core with Vite プロジェクトの構成: guidebooks/how-to-develop/dotnet/configure-asp-net-core-with-vite-project.md
              - 結合テストプロジェクトの構成: guidebooks/how-to-develop/dotnet/configure-integration-test-project.md
              - ヘルスチェック API の実装: guidebooks/how-to-develop/dotnet/health-check-api.md
          - Vue.js 編:
              - guidebooks/how-to-develop/vue-js/index.md
              - 事前準備: guidebooks/how-to-develop/vue-js/preparation.md
              - ブランクプロジェクトの作成: guidebooks/how-to-develop/vue-js/create-vuejs-blank-project.md
              - ブランクプロジェクトのフォルダー構造: guidebooks/how-to-develop/vue-js/folder-structure-of-blank-project.md
              - プロジェクトの共通設定: guidebooks/how-to-develop/vue-js/project-settings.md
              - 開発に使用するパッケージ: guidebooks/how-to-develop/vue-js/optional-packages.md
              - CSS の設定と CSS フレームワークの適用: guidebooks/how-to-develop/vue-js/css.md
              - 静的コード分析とフォーマット: guidebooks/how-to-develop/vue-js/static-verification-and-format.md
              - 入力値検証: guidebooks/how-to-develop/vue-js/input-validation.md
              - Open API 仕様書からのクライアントコード生成: guidebooks/how-to-develop/vue-js/create-api-client-code.md
          - ローカル開発環境の構築:
              - guidebooks/how-to-develop/local-environment/index.md
          - アプリケーションの発行:
              - guidebooks/how-to-develop/publication/index.md
          - CORS 環境の構築:
              - guidebooks/how-to-develop/cors/index.md
          # - アプリケーションテスト:
              # - guidebooks/app-testing/index.md
      - マイグレーション:
          - guidebooks/migration/index.md
          - .NET Framework にとどまることのリスク:
              - guidebooks/migration/dotnetfw-risk/index.md
              - .NET ランタイムの最新動向: guidebooks/migration/dotnetfw-risk/dotnet-runtime-trends.md
              - .NET Framework の開発停止によるリスク: guidebooks/migration/dotnetfw-risk/risk-of-dotnet-framework.md
              - .NET への移行: guidebooks/migration/dotnetfw-risk/migration-to-dotnet.md
              # - 開発プロセスのモダナイズ:
                  # - guidebooks/modern-dev-process/index.md
  - サンプル解説:
      - samples/index.md
      - コンソールアプリケーションでの DI の利用:
          - samples/console-app-with-di/index.md
      - Azure AD B2C による認証の利用:
          - samples/azure-ad-b2c/index.md
  - AlesInfiny Maris OSS Edition について:
      - 利用規約: about-maris/terms.md
      - 商標: about-maris/trademarks.md
      - クレジット表記: about-maris/credits.md
# yamllint enable rule:comments-indentation

theme:
  name: material
  custom_dir: overrides
  favicon: assets/images/favicon.png
  features:
    - content.code.annotate
    - navigation.indexes
    - navigation.instant
    - navigation.tabs
    - navigation.top
    - navigation.tracking
  font:
    text: Noto Sans JP
    code: Source Code Pro
  language: ja
  logo: assets/maris-logo.png
  palette:
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/weather-sunny
        name: Switch to dark mode
      primary: blue
      accent: indigo
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/weather-night
        name: Switch to light mode
      primary: blue
      accent: cyan

markdown_extensions:
  - abbr
  - admonition
  - attr_list
  - def_list
  - footnotes
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.highlight:
      linenums: true
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.snippets:
      check_paths: true
      auto_append:
        - includes/abbreviations.md
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed
  - toc:
      permalink: ⚓︎
      toc_depth: 3

extra:
  footer_urls:
    terms: about-maris/terms/
    trademarks: about-maris/trademarks/
    credits: about-maris/credits/
    rss_created: feed_rss_created.xml
    rss_updated: feed_rss_updated.xml
  version: !ENV [VERSION, "Local Version"]

extra_css:
  - stylesheets/overrides.css

plugins:
  - search:
      lang: ja
  - minify:
      minify_html: true
      minify_js: true
      htmlmin_opts:
        remove_comments: true
  - social:
      enabled: !ENV [BUILD_DOCUMENTS, false]
      cards_layout_options:
        font_family: Noto Sans JP

