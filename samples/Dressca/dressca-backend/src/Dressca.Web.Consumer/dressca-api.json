{
  "x-generator": "NSwag v14.6.1.0 (NJsonSchema v11.5.1.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Dressca Consumer Web API",
    "description": "Dressca Consumer の Web API 仕様",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:5001",
      "description": "ローカル開発用のサーバーです。"
    }
  ],
  "paths": {
    "/api/assets/{assetCode}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "アセットを取得します。",
        "operationId": "get",
        "parameters": [
          {
            "name": "assetCode",
            "in": "path",
            "required": true,
            "description": "アセットコード。",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "成功。"
          },
          "404": {
            "description": "アセットコードに対応するアセットがない。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/basket-items": {
      "get": {
        "tags": [
          "BasketItems"
        ],
        "summary": "買い物かごアイテムの一覧を取得します。",
        "operationId": "getBasketItems",
        "responses": {
          "200": {
            "description": "成功。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasketResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BasketItems"
        ],
        "summary": "買い物かごアイテム内の数量を変更します。\n買い物かご内に存在しないカタログアイテム ID は指定できません。",
        "description": "この API では、買い物かご内に存在する商品の数量を変更できます。\n買い物かご内に存在しないカタログアイテム Id を指定すると HTTP 400 を返却します。\nまたシステムに登録されていないカタログアイテム Id を指定した場合も HTTP 400 を返却します。",
        "operationId": "putBasketItems",
        "requestBody": {
          "x-name": "putBasketItems",
          "description": "変更する買い物かごアイテムのデータリスト。",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PutBasketItemsRequest"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BasketItems"
        ],
        "summary": "買い物かごに商品を追加します。",
        "description": "この API では、システムに登録されていないカタログアイテム Id を指定した場合 HTTP 400 を返却します。\nまた買い物かごに追加していないカタログアイテムを指定した場合、その商品を買い物かごに追加します。\nすでに買い物かごに追加されているカタログアイテムを指定した場合、指定した数量、買い物かご内の数量を追加します。\n買い物かご内のカタログアイテムの数量が 0 未満になるように減じることはできません。\n計算の結果数量が 0 未満になる場合 HTTP 500 を返却します。",
        "operationId": "postBasketItem",
        "requestBody": {
          "x-name": "postBasketItem",
          "description": "追加する商品の情報。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasketItemsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "作成完了。"
          },
          "400": {
            "description": "リクエストエラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/basket-items/{catalogItemId}": {
      "delete": {
        "tags": [
          "BasketItems"
        ],
        "summary": "買い物かごから指定したカタログアイテム Id の商品を削除します。",
        "description": "catalogItemId には買い物かご内に存在するカタログアイテム Id を指定してください。\nカタログアイテム Id は 1 以上の整数です。\n0 以下の値を指定したり、整数値ではない値を指定した場合 HTTP 400 を返却します。\n買い物かご内に指定したカタログアイテムの商品が存在しない場合、 HTTP 404 を返却します。",
        "operationId": "deleteBasketItem",
        "parameters": [
          {
            "name": "catalogItemId",
            "in": "path",
            "required": true,
            "description": "カタログアイテム Id 。",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854780000.0,
              "minimum": 1.0
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "買い物かご内に指定したカタログアイテム Id がない。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/catalog-brands": {
      "get": {
        "tags": [
          "CatalogBrands"
        ],
        "summary": "カタログブランドの一覧を取得します。",
        "operationId": "getCatalogBrands",
        "responses": {
          "200": {
            "description": "成功。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogBrandResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/catalog-categories": {
      "get": {
        "tags": [
          "CatalogCategories"
        ],
        "summary": "カタログカテゴリの一覧を取得します。",
        "operationId": "getCatalogCategories",
        "responses": {
          "200": {
            "description": "成功。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/catalog-items": {
      "get": {
        "tags": [
          "CatalogItems"
        ],
        "summary": "カタログアイテムを検索して返します。",
        "operationId": "getByQuery",
        "parameters": [
          {
            "name": "brandId",
            "in": "query",
            "description": "カタログブランド ID です。\n未設定の場合は全カタログブランドを対象にします。\n            ",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "カタログカテゴリ ID です。\n未設定の場合は全カタログカテゴリを対象にします。\n            ",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "page",
            "in": "query",
            "description": "ページ番号です。\n未設定の場合は 1 ページ目として扱います。\n1 以上の整数値を指定できます。\n            ",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "1 ページに収めるアイテムの数です。\n未設定の場合は 20 個です。\n1 以上 50 以下の整数値を指定できます。\n            ",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 50.0,
              "minimum": 1.0
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "成功。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedListOfCatalogItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "リクエストエラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "注文情報を取得します。",
        "operationId": "getById",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "注文 Id 。",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "成功。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "注文 Id が存在しない。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "買い物かごに登録されている商品を注文します。",
        "operationId": "postOrder",
        "requestBody": {
          "x-name": "postOrderInput",
          "description": "注文に必要な配送先などの情報。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOrderRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "成功。"
          },
          "400": {
            "description": "リクエストエラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "HealthChecks"
        ],
        "operationId": "HealthChecks_api/healthGET",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "HealthChecks"
        ],
        "operationId": "HealthChecks_api/healthHEAD",
        "responses": {
          "200": {
            "description": ""
          },
          "503": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BasketResponse": {
        "type": "object",
        "description": "買い物かごのレスポンスデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "buyerId"
        ],
        "properties": {
          "buyerId": {
            "type": "string",
            "description": "購入者 Id を取得または設定します。\n            ",
            "minLength": 1
          },
          "account": {
            "description": "会計情報を取得または設定します。\n            ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountResponse"
              }
            ]
          },
          "basketItems": {
            "type": "array",
            "description": "買い物かごアイテムのリストを取得または設定します。\n            ",
            "items": {
              "$ref": "#/components/schemas/BasketItemResponse"
            }
          },
          "deletedItemIds": {
            "type": "array",
            "description": "削除済みカタログアイテムの Id のリストを取得または設定します。\n            ",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "AccountResponse": {
        "type": "object",
        "description": "会計情報のレスポンスデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "consumptionTaxRate",
          "totalItemsPrice",
          "deliveryCharge",
          "consumptionTax",
          "totalPrice"
        ],
        "properties": {
          "consumptionTaxRate": {
            "type": "number",
            "description": "消費税率を取得または設定します。\n            ",
            "format": "decimal"
          },
          "totalItemsPrice": {
            "type": "number",
            "description": "注文アイテムの税抜き合計金額を取得または設定します。\n            ",
            "format": "decimal"
          },
          "deliveryCharge": {
            "type": "number",
            "description": "送料を取得または設定します。\n            ",
            "format": "decimal"
          },
          "consumptionTax": {
            "type": "number",
            "description": "消費税額を取得または設定します。\n            ",
            "format": "decimal"
          },
          "totalPrice": {
            "type": "number",
            "description": "送料、税込みの合計金額を取得または設定します。\n            ",
            "format": "decimal"
          }
        }
      },
      "BasketItemResponse": {
        "type": "object",
        "description": "買い物かごのアイテムのレスポンスデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "catalogItemId",
          "unitPrice",
          "quantity",
          "subTotal"
        ],
        "properties": {
          "catalogItemId": {
            "type": "integer",
            "description": "カタログアイテム Id を取得または設定します。\n            ",
            "format": "int64"
          },
          "unitPrice": {
            "type": "number",
            "description": "単価を取得または設定します。\n            ",
            "format": "decimal"
          },
          "quantity": {
            "type": "integer",
            "description": "数量を取得または設定します。\n            ",
            "format": "int32"
          },
          "subTotal": {
            "type": "number",
            "description": "小計額を取得します。\n            ",
            "format": "decimal"
          },
          "catalogItem": {
            "description": "カタログアイテムを取得または設定します。\n            ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CatalogItemSummaryResponse"
              }
            ]
          }
        }
      },
      "CatalogItemSummaryResponse": {
        "type": "object",
        "description": "カタログアイテムの概要のレスポンスデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "productCode"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "カタログアイテム Id を取得または設定します。\n            ",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "商品名を取得または設定します。\n            ",
            "minLength": 1
          },
          "productCode": {
            "type": "string",
            "description": "商品コードを取得または設定します。\n            ",
            "minLength": 1
          },
          "assetCodes": {
            "type": "array",
            "description": "アセットコードの一覧を取得または設定します。\n            ",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PutBasketItemsRequest": {
        "type": "object",
        "description": "買い物かごのカタログアイテム数量を変更する処理のリクエストデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "catalogItemId",
          "quantity"
        ],
        "properties": {
          "catalogItemId": {
            "type": "integer",
            "description": "カタログアイテム Id を取得または設定します。\n1 以上の買い物かご、およびシステムに存在するカタログアイテム Id を指定してください。\n            ",
            "format": "int64",
            "maximum": 9223372036854780000.0,
            "minimum": 1.0
          },
          "quantity": {
            "type": "integer",
            "description": "数量を取得または設定します。\n0 以上の値を設定してください。\n            ",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 0.0
          }
        }
      },
      "PostBasketItemsRequest": {
        "type": "object",
        "description": "買い物かごにカタログアイテムを追加する処理のリクエストデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "catalogItemId"
        ],
        "properties": {
          "catalogItemId": {
            "type": "integer",
            "description": "カタログアイテム Id を取得または設定します。\n1 以上の買い物かご、およびシステムに存在するカタログアイテム Id を指定してください。\n            ",
            "format": "int64",
            "maximum": 9223372036854780000.0,
            "minimum": 1.0
          },
          "addedQuantity": {
            "type": "integer",
            "description": "数量を取得または設定します。\nカタログアイテム Id に指定した商品が買い物かごに含まれている場合、負の値を指定すると買い物かごから指定した数だけ取り出します。\n未指定の場合は 1 です。\n            ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CatalogBrandResponse": {
        "type": "object",
        "description": "カタログブランドのレスポンスデータを表します。\nカタログアイテムの製造元や企画元に基づいて定義されるブランドを表現します。\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "カタログブランド Id を取得または設定します。\n            ",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "ブランド名を取得または設定します。\n            ",
            "minLength": 1
          }
        }
      },
      "CatalogCategoryResponse": {
        "type": "object",
        "description": "カタログカテゴリのレスポンスデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "カタログカテゴリ Id を取得または設定します。\n            ",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "カテゴリ名を取得または設定します。\n            ",
            "minLength": 1
          }
        }
      },
      "PagedListOfCatalogItemResponse": {
        "type": "object",
        "description": "ページネーションした結果のリストを管理します。\n            ",
        "additionalProperties": false,
        "properties": {
          "page": {
            "type": "integer",
            "description": "現在のページ番号を取得します。\n最初のページは 1 です。\n            ",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "ページの総数を取得します。\n            ",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "1 ページあたりの件数を取得します。\n            ",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "アイテムの総数を取得します。\n            ",
            "format": "int32"
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "前のページが存在するかどうか示す値を取得します。\n            "
          },
          "hasNext": {
            "type": "boolean",
            "description": "次のページが存在するかどうか示す値を取得します。\n            "
          },
          "items": {
            "type": "array",
            "description": "検索結果のリストを取得します。\n            ",
            "items": {
              "$ref": "#/components/schemas/CatalogItemResponse"
            }
          }
        }
      },
      "CatalogItemResponse": {
        "type": "object",
        "description": "カタログアイテムのレスポンスデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "description",
          "price",
          "catalogCategoryId",
          "catalogBrandId",
          "id",
          "name",
          "productCode"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "説明を取得または設定します。\n            ",
            "minLength": 1
          },
          "price": {
            "type": "number",
            "description": "単価を取得または設定します。\n            ",
            "format": "decimal"
          },
          "catalogCategoryId": {
            "type": "integer",
            "description": "カタログカテゴリ Id を取得または設定します。\n            ",
            "format": "int64"
          },
          "catalogBrandId": {
            "type": "integer",
            "description": "カタログブランド Id を取得または設定します。\n            ",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "description": "カタログアイテム Id を取得または設定します。\n            ",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "商品名を取得または設定します。\n            ",
            "minLength": 1
          },
          "productCode": {
            "type": "string",
            "description": "商品コードを取得または設定します。\n            ",
            "minLength": 1
          },
          "assetCodes": {
            "type": "array",
            "description": "アセットコードの一覧を取得または設定します。\n            ",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OrderResponse": {
        "type": "object",
        "description": "注文情報のレスポンスデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "buyerId",
          "orderDate",
          "fullName",
          "postalCode",
          "todofuken",
          "shikuchoson",
          "azanaAndOthers"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "注文 Id を取得または設定します。\n            ",
            "format": "int64"
          },
          "buyerId": {
            "type": "string",
            "description": "購入者 Id を取得または設定します。\n            ",
            "minLength": 1
          },
          "orderDate": {
            "type": "string",
            "description": "注文日を取得または設定します。\n            ",
            "format": "date-time",
            "minLength": 1
          },
          "fullName": {
            "type": "string",
            "description": "お届け先氏名を取得または設定します。\n            ",
            "minLength": 1
          },
          "postalCode": {
            "type": "string",
            "description": "お届け先郵便番号を取得または設定します。\n            ",
            "minLength": 1
          },
          "todofuken": {
            "type": "string",
            "description": "お届け先都道府県を取得または設定します。\n            ",
            "minLength": 1
          },
          "shikuchoson": {
            "type": "string",
            "description": "お届け先市区町村を取得または設定します。\n            ",
            "minLength": 1
          },
          "azanaAndOthers": {
            "type": "string",
            "description": "お届け先字／番地／建物名／部屋番号を取得または設定します。\n            ",
            "minLength": 1
          },
          "account": {
            "description": "会計情報を取得または設定します。\n            ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountResponse"
              }
            ]
          },
          "orderItems": {
            "type": "array",
            "description": "注文アイテムのリストを取得または設定します。\n            ",
            "items": {
              "$ref": "#/components/schemas/OrderItemResponse"
            }
          }
        }
      },
      "OrderItemResponse": {
        "type": "object",
        "description": "注文アイテムのレスポンスデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "unitPrice",
          "quantity",
          "subTotal"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "注文アイテム Id を取得します。\n            ",
            "format": "int64"
          },
          "itemOrdered": {
            "description": "注文された商品（カタログアイテム）を取得または設定します。\n            ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CatalogItemSummaryResponse"
              }
            ]
          },
          "unitPrice": {
            "type": "number",
            "description": "単価を取得または設定します。\n            ",
            "format": "decimal"
          },
          "quantity": {
            "type": "integer",
            "description": "数量を取得または設定します。\n            ",
            "format": "int32"
          },
          "subTotal": {
            "type": "number",
            "description": "小計額を取得します。\n            ",
            "format": "decimal"
          }
        }
      },
      "PostOrderRequest": {
        "type": "object",
        "description": "注文を行う処理のリクエストデータを表します。\n            ",
        "additionalProperties": false,
        "required": [
          "fullName",
          "postalCode",
          "todofuken",
          "shikuchoson",
          "azanaAndOthers"
        ],
        "properties": {
          "fullName": {
            "type": "string",
            "description": "注文者の氏名を取得または設定します。\n            ",
            "maxLength": 64,
            "minLength": 0
          },
          "postalCode": {
            "type": "string",
            "description": "郵便番号を取得または設定します。\n            ",
            "maxLength": 16,
            "minLength": 0
          },
          "todofuken": {
            "type": "string",
            "description": "都道府県を取得または設定します。\n            ",
            "maxLength": 16,
            "minLength": 0
          },
          "shikuchoson": {
            "type": "string",
            "description": "市区町村を取得または設定します。\n            ",
            "maxLength": 32,
            "minLength": 0
          },
          "azanaAndOthers": {
            "type": "string",
            "description": "字／番地／建物名／部屋番号を取得または設定します。\n            ",
            "maxLength": 128,
            "minLength": 0
          }
        }
      }
    }
  }
}